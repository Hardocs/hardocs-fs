import * as chalk from 'chalk';
declare const _default: {
    Warn: (val: any) => void;
    Err: (val: any) => void;
    Success: (val: any) => void;
    Good: (val: any) => void;
    chalk: {
        default: chalk.Chalk & chalk.ChalkFunction & {
            supportsColor: false | chalk.ColorSupport;
            Level: chalk.Level;
            Color: "black" | "red" | "green" | "yellow" | "blue" | "magenta" | "cyan" | "white" | "gray" | "grey" | "blackBright" | "redBright" | "greenBright" | "yellowBright" | "blueBright" | "magentaBright" | "cyanBright" | "whiteBright" | "bgBlack" | "bgRed" | "bgGreen" | "bgYellow" | "bgBlue" | "bgMagenta" | "bgCyan" | "bgWhite" | "bgGray" | "bgGrey" | "bgBlackBright" | "bgRedBright" | "bgGreenBright" | "bgYellowBright" | "bgBlueBright" | "bgMagentaBright" | "bgCyanBright" | "bgWhiteBright";
            ForegroundColor: "black" | "red" | "green" | "yellow" | "blue" | "magenta" | "cyan" | "white" | "gray" | "grey" | "blackBright" | "redBright" | "greenBright" | "yellowBright" | "blueBright" | "magentaBright" | "cyanBright" | "whiteBright";
            BackgroundColor: "bgBlack" | "bgRed" | "bgGreen" | "bgYellow" | "bgBlue" | "bgMagenta" | "bgCyan" | "bgWhite" | "bgGray" | "bgGrey" | "bgBlackBright" | "bgRedBright" | "bgGreenBright" | "bgYellowBright" | "bgBlueBright" | "bgMagentaBright" | "bgCyanBright" | "bgWhiteBright";
            Modifiers: "bold" | "inverse" | "hidden" | "visible" | "reset" | "underline" | "dim" | "italic" | "strikethrough";
            stderr: chalk.Chalk & {
                supportsColor: false | chalk.ColorSupport;
            };
        };
        Instance: chalk.Instance;
        level: chalk.Level;
        hex(color: string): chalk.Chalk;
        keyword(color: string): chalk.Chalk;
        rgb(red: number, green: number, blue: number): chalk.Chalk;
        hsl(hue: number, saturation: number, lightness: number): chalk.Chalk;
        hsv(hue: number, saturation: number, value: number): chalk.Chalk;
        hwb(hue: number, whiteness: number, blackness: number): chalk.Chalk;
        ansi(code: number): chalk.Chalk;
        ansi256(index: number): chalk.Chalk;
        bgHex(color: string): chalk.Chalk;
        bgKeyword(color: string): chalk.Chalk;
        bgRgb(red: number, green: number, blue: number): chalk.Chalk;
        bgHsl(hue: number, saturation: number, lightness: number): chalk.Chalk;
        bgHsv(hue: number, saturation: number, value: number): chalk.Chalk;
        bgHwb(hue: number, whiteness: number, blackness: number): chalk.Chalk;
        bgAnsi(code: number): chalk.Chalk;
        bgAnsi256(index: number): chalk.Chalk;
        reset: chalk.Chalk;
        bold: chalk.Chalk;
        dim: chalk.Chalk;
        italic: chalk.Chalk;
        underline: chalk.Chalk;
        inverse: chalk.Chalk;
        hidden: chalk.Chalk;
        strikethrough: chalk.Chalk;
        visible: chalk.Chalk;
        black: chalk.Chalk;
        red: chalk.Chalk;
        green: chalk.Chalk;
        yellow: chalk.Chalk;
        blue: chalk.Chalk;
        magenta: chalk.Chalk;
        cyan: chalk.Chalk;
        white: chalk.Chalk;
        gray: chalk.Chalk;
        grey: chalk.Chalk;
        blackBright: chalk.Chalk;
        redBright: chalk.Chalk;
        greenBright: chalk.Chalk;
        yellowBright: chalk.Chalk;
        blueBright: chalk.Chalk;
        magentaBright: chalk.Chalk;
        cyanBright: chalk.Chalk;
        whiteBright: chalk.Chalk;
        bgBlack: chalk.Chalk;
        bgRed: chalk.Chalk;
        bgGreen: chalk.Chalk;
        bgYellow: chalk.Chalk;
        bgBlue: chalk.Chalk;
        bgMagenta: chalk.Chalk;
        bgCyan: chalk.Chalk;
        bgWhite: chalk.Chalk;
        bgGray: chalk.Chalk;
        bgGrey: chalk.Chalk;
        bgBlackBright: chalk.Chalk;
        bgRedBright: chalk.Chalk;
        bgGreenBright: chalk.Chalk;
        bgYellowBright: chalk.Chalk;
        bgBlueBright: chalk.Chalk;
        bgMagentaBright: chalk.Chalk;
        bgCyanBright: chalk.Chalk;
        bgWhiteBright: chalk.Chalk;
        supportsColor: false | chalk.ColorSupport;
        Level: chalk.Level;
        Color: "black" | "red" | "green" | "yellow" | "blue" | "magenta" | "cyan" | "white" | "gray" | "grey" | "blackBright" | "redBright" | "greenBright" | "yellowBright" | "blueBright" | "magentaBright" | "cyanBright" | "whiteBright" | "bgBlack" | "bgRed" | "bgGreen" | "bgYellow" | "bgBlue" | "bgMagenta" | "bgCyan" | "bgWhite" | "bgGray" | "bgGrey" | "bgBlackBright" | "bgRedBright" | "bgGreenBright" | "bgYellowBright" | "bgBlueBright" | "bgMagentaBright" | "bgCyanBright" | "bgWhiteBright";
        ForegroundColor: "black" | "red" | "green" | "yellow" | "blue" | "magenta" | "cyan" | "white" | "gray" | "grey" | "blackBright" | "redBright" | "greenBright" | "yellowBright" | "blueBright" | "magentaBright" | "cyanBright" | "whiteBright";
        BackgroundColor: "bgBlack" | "bgRed" | "bgGreen" | "bgYellow" | "bgBlue" | "bgMagenta" | "bgCyan" | "bgWhite" | "bgGray" | "bgGrey" | "bgBlackBright" | "bgRedBright" | "bgGreenBright" | "bgYellowBright" | "bgBlueBright" | "bgMagentaBright" | "bgCyanBright" | "bgWhiteBright";
        Modifiers: "bold" | "inverse" | "hidden" | "visible" | "reset" | "underline" | "dim" | "italic" | "strikethrough";
        stderr: chalk.Chalk & {
            supportsColor: false | chalk.ColorSupport;
        };
    };
};
export default _default;
