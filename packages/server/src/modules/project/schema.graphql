type Mutation {
  createProject(input: CreateProjectInput!): Project!
  openProject(path: String!): Project!
}

input CreateProjectInput {
  name: String!
  shortTitle: String
  nameWithOwner: String!
  longTitle: String!
  languages: [LanguageInput!]
  projectLink: String!
  intendedUse: String!
  made: Boolean!
  madeIndependently: Boolean!
  license: [LicenseInput]
  author: AuthorInput!
  contributors: [ContributorInput!]
  docsDir: String! = "docs"
  allDocs: [AllDocsInput!]!
}

input AllDocsInput {
  title: String! = "Example"
  description: String! = "This is an example"
  fileName: String! = "index.md"
}

type AllDocs {
  title: String!
  description: String!
  fileName: String!
}

"""
Input type for language.
"""
input LanguageInput {
  "The name is a required field and it must be one of EN, FR or CH"
  name: Lang!
  description: String!
  longDescription: String!
  keywords: [String!]
}

input LicenseInput {
  "Name of license. i.e MIT, ISC, Apache License etc."
  name: String!
  "Specify the name of the file that will contain your license. Defaults to LICENSE"
  file: String! = "LICENSE"
}
input ContributorInput {
  name: String!
}

input AuthorInput {
  name: String!
  affiliation: String!
}

# Project schemas
type Project {
  id: ID!
  path: String
  name: String!
  shortTitle: String!
  nameWithOwner: String!
  longTitle: String!
  languages: [Language!]
  projectLink: String!
  intendedUse: String!
  made: Boolean!
  madeIndependently: Boolean!
  license: [License]
  updatedAt: String!
  author: Author!
  contributors: [Contributor!]
  docsDir: String!
  allDocs: [AllDocs!]!
}

type Language {
  name: Lang!
  description: String!
  longDescription: String!
  keywords: [String!]
}

enum Lang {
  "English"
  EN
  "French"
  FR
  "Chineese"
  CH
}

type License {
  "Name of license. i.e MIT, ISC, Apache License etc."
  name: String!
  file: String!
}

type Author {
  name: String!
  affiliation: String!
}

type Contributor {
  name: String!
}
